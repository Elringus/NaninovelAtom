{
  "commands": [
    {
      "id": "AppendText",
      "alias": "append",
      "localizable": true,
      "summary": "Appends provided text to a text printer.",
      "remarks": "The entire text will be appended immediately, without triggering reveal effect or any other side-effects.",
      "params": [
        {
          "id": "Text",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "The text to append."
        },
        {
          "id": "PrinterId",
          "alias": "printer",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the printer actor to use. Will use a a default one when not provided."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ArrangeCharacters",
      "alias": "arrange",
      "localizable": false,
      "summary": "Arranges specified characters by X-axis.  When no parameters provided, will execute an auto-arrange evenly distributing visible characters by X-axis.",
      "params": [
        {
          "id": "CharacterPositions",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "map",
            "contentType": "float"
          },
          "summary": "A collection of character ID to scene X-axis position (relative to the left screen border, in percents) named values.  Position 0 relates to the left border and 100 to the right border of the screen; 50 is the center."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ModifyBackground",
      "alias": "back",
      "localizable": false,
      "summary": "Modifies a [background actor](https://naninovel.com/guide/backgrounds.html).",
      "remarks": "Backgrounds are handled a bit differently from characters. Most of the time we'll only have  one background actor on scene, which will constantly transition to different appearances.  To free the user from always repeating same actor ID in scripts, we allow to  provide only the background appearance and transition type (optional) as a nameless parameter and assume that  `MainBackground` actor should be affected. When this is not the case, ID of the background actor can be explicitly  provided via the `id` parameter.",
      "params": [
        {
          "id": "AppearanceAndTransition",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "namedLiteral",
            "contentType": "string"
          },
          "summary": "Appearance to set for the modified background and name of the [transition effect](https://naninovel.com/guide/background-transition-effects.html) to use.  When transition is not provided, a cross-fade effect will be used by default."
        },
        {
          "id": "TransitionParams",
          "alias": "params",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Parameters of the transition effect."
        },
        {
          "id": "CustomDissolveTexturePath",
          "alias": "dissolve",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the [custom dissolve](https://naninovel.com/guide/background-transition-effects.html#custom-transition-effects) texture (path should be relative to a `Resources` folder).  Has effect only when the transition is set to `Custom` mode."
        },
        {
          "id": "Id",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the actor to modify."
        },
        {
          "id": "Appearance",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Appearance to set for the modified actor."
        },
        {
          "id": "ScenePosition",
          "alias": "pos",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Position (relative to the screen borders, in percents) to set for the modified actor.  Position is described as follows: `0,0` is the bottom left, `50,50` is the center and `100,100` is the top right corner of the screen."
        },
        {
          "id": "Scale",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Scale to set for the modified actor."
        },
        {
          "id": "Position",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Position (in world space) to set for the modified actor."
        },
        {
          "id": "Visible",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Visibility status to set for the modified actor."
        },
        {
          "id": "Rotation",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Rotation to set for the modified actor."
        },
        {
          "id": "TintColor",
          "alias": "tint",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Tint color to set for the modified actor.  <br /><br />  Strings that begin with `#` will be parsed as hexadecimal in the following way:  `#RGB` (becomes RRGGBB), `#RRGGBB`, `#RGBA` (becomes RRGGBBAA), `#RRGGBBAA`; when alpha is not specified will default to FF.  <br /><br />  Strings that do not begin with `#` will be parsed as literal colors, with the following supported:  red, cyan, blue, darkblue, lightblue, purple, yellow, lime, fuchsia, white, silver, grey, black, orange, brown, maroon, green, olive, navy, teal, aqua, magenta."
        },
        {
          "id": "EasingTypeName",
          "alias": "easing",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Name of the easing function to use for the modification.  <br /><br />  Available options: Linear, SmoothStep, Spring, EaseInQuad, EaseOutQuad, EaseInOutQuad, EaseInCubic, EaseOutCubic, EaseInOutCubic, EaseInQuart, EaseOutQuart, EaseInOutQuart, EaseInQuint, EaseOutQuint, EaseInOutQuint, EaseInSine, EaseOutSine, EaseInOutSine, EaseInExpo, EaseOutExpo, EaseInOutExpo, EaseInCirc, EaseOutCirc, EaseInOutCirc, EaseInBounce, EaseOutBounce, EaseInOutBounce, EaseInBack, EaseOutBack, EaseInOutBack, EaseInElastic, EaseOutElastic, EaseInOutElastic.  <br /><br />  When not specified, will use a default easing function set in the actor's manager configuration settings."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "PlayBgm",
      "alias": "bgm",
      "localizable": false,
      "summary": "Plays or modifies currently played BGM (background music) track with the provided name.",
      "remarks": "Music tracks are looped by default.  When music track name (BgmPath) is not specified, will affect all the currently played tracks.  When invoked for a track that is already playing, the playback won't be affected (track won't start playing from the start),  but the specified parameters (volume and whether the track is looped) will be applied.",
      "params": [
        {
          "id": "BgmPath",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the music track to play."
        },
        {
          "id": "IntroBgmPath",
          "alias": "intro",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the intro music track to play once before the main track (not affected by the loop parameter)."
        },
        {
          "id": "Volume",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Volume of the music track."
        },
        {
          "id": "Loop",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to play the track from beginning when it finishes."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "AppendLineBreak",
      "alias": "br",
      "localizable": false,
      "summary": "Adds a line break to a text printer.",
      "params": [
        {
          "id": "Count",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "int"
          },
          "summary": "Number of line breaks to add."
        },
        {
          "id": "PrinterId",
          "alias": "printer",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the printer actor to use. Will use a default one when not provided."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ModifyCamera",
      "alias": "camera",
      "localizable": false,
      "summary": "Modifies the main camera, changing offset, zoom level and rotation over time.  Check [this video](https://youtu.be/zy28jaMss8w) for a quick demonstration of the command effect.",
      "params": [
        {
          "id": "Offset",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Local camera position offset in units by X,Y,Z axes."
        },
        {
          "id": "Rotation",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Local camera rotation by Z-axis in angle degrees (0.0 to 360.0 or -180.0 to 180.0)."
        },
        {
          "id": "Zoom",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Relatize camera zoom (orthographic size or field of view, depending on the render mode), in 0.0 to 1.0 range."
        },
        {
          "id": "Orthographic",
          "alias": "ortho",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the camera should render in orthographic (true) or perspective (false) mode."
        },
        {
          "id": "ToggleTypeNames",
          "alias": "toggle",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "string"
          },
          "summary": "Names of the components to toggle (enable if disabled and vice-versa). The components should be attached to the same gameobject as the camera.  This can be used to toggle [custom post-processing effects](https://naninovel.com/guide/special-effects.html#camera-effects)."
        },
        {
          "id": "EasingTypeName",
          "alias": "easing",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Name of the easing function to use for the modification.  <br /><br />  Available options: Linear, SmoothStep, Spring, EaseInQuad, EaseOutQuad, EaseInOutQuad, EaseInCubic, EaseOutCubic, EaseInOutCubic, EaseInQuart, EaseOutQuart, EaseInOutQuart, EaseInQuint, EaseOutQuint, EaseInOutQuint, EaseInSine, EaseOutSine, EaseInOutSine, EaseInExpo, EaseOutExpo, EaseInOutExpo, EaseInCirc, EaseOutCirc, EaseInOutCirc, EaseInBounce, EaseOutBounce, EaseInOutBounce, EaseInBack, EaseOutBack, EaseInOutBack, EaseInElastic, EaseOutElastic, EaseInOutElastic.  <br /><br />  When not specified, will use a default easing function set in the camera configuration settings."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ModifyCharacter",
      "alias": "char",
      "localizable": false,
      "summary": "Modifies a [character actor](https://naninovel.com/guide/characters.html).",
      "params": [
        {
          "id": "IdAndAppearance",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "namedLiteral",
            "contentType": "string"
          },
          "summary": "ID of the character to modify and the appearance to set.  When appearance is not provided, will use either a `Default` (is exists) or a random one."
        },
        {
          "id": "LookDirection",
          "alias": "look",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Look direction of the actor; possible options: left, right, center."
        },
        {
          "id": "AvatarTexturePath",
          "alias": "avatar",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Name (path) of the [avatar texture](https://naninovel.com/guide/characters.html#avatar-textures) to assign for the character.  Use `none` to remove (un-assign) avatar texture from the character."
        },
        {
          "id": "Id",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the actor to modify."
        },
        {
          "id": "Appearance",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Appearance to set for the modified actor."
        },
        {
          "id": "ScenePosition",
          "alias": "pos",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Position (relative to the screen borders, in percents) to set for the modified actor.  Position is described as follows: `0,0` is the bottom left, `50,50` is the center and `100,100` is the top right corner of the screen."
        },
        {
          "id": "Scale",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Scale to set for the modified actor."
        },
        {
          "id": "Position",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Position (in world space) to set for the modified actor."
        },
        {
          "id": "Visible",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Visibility status to set for the modified actor."
        },
        {
          "id": "Rotation",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Rotation to set for the modified actor."
        },
        {
          "id": "TintColor",
          "alias": "tint",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Tint color to set for the modified actor.  <br /><br />  Strings that begin with `#` will be parsed as hexadecimal in the following way:  `#RGB` (becomes RRGGBB), `#RRGGBB`, `#RGBA` (becomes RRGGBBAA), `#RRGGBBAA`; when alpha is not specified will default to FF.  <br /><br />  Strings that do not begin with `#` will be parsed as literal colors, with the following supported:  red, cyan, blue, darkblue, lightblue, purple, yellow, lime, fuchsia, white, silver, grey, black, orange, brown, maroon, green, olive, navy, teal, aqua, magenta."
        },
        {
          "id": "EasingTypeName",
          "alias": "easing",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Name of the easing function to use for the modification.  <br /><br />  Available options: Linear, SmoothStep, Spring, EaseInQuad, EaseOutQuad, EaseInOutQuad, EaseInCubic, EaseOutCubic, EaseInOutCubic, EaseInQuart, EaseOutQuart, EaseInOutQuart, EaseInQuint, EaseOutQuint, EaseInOutQuint, EaseInSine, EaseOutSine, EaseInOutSine, EaseInExpo, EaseOutExpo, EaseInOutExpo, EaseInCirc, EaseOutCirc, EaseInOutCirc, EaseInBounce, EaseOutBounce, EaseInOutBounce, EaseInBack, EaseOutBack, EaseInOutBack, EaseInElastic, EaseOutElastic, EaseInOutElastic.  <br /><br />  When not specified, will use a default easing function set in the actor's manager configuration settings."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "AddChoice",
      "alias": "choice",
      "localizable": true,
      "summary": "Adds a choice option to a choice handler with the specified ID (or default one).",
      "remarks": "When `goto` parameter is not specified, will continue script execution from the next script line.",
      "params": [
        {
          "id": "ChoiceSummary",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Text to show for the choice.  When the text contain spaces, wrap it in double quotes (`\"`).  In case you wish to include the double quotes in the text itself, escape them."
        },
        {
          "id": "ButtonPath",
          "alias": "button",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path (relative to a `Resources` folder) to a [button prefab](https://naninovel.com/guide/choices.html#choice-button) representing the choice.  The prefab should have a `ChoiceHandlerButton` component attached to the root object.  Will use a default button when not provided."
        },
        {
          "id": "ButtonPosition",
          "alias": "pos",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Local position of the choice button inside the choice handler (if supported by the handler implementation)."
        },
        {
          "id": "HandlerId",
          "alias": "handler",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the choice handler to add choice for. Will use a default handler if not provided."
        },
        {
          "id": "GotoPath",
          "alias": "goto",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "namedLiteral",
            "contentType": "string"
          },
          "summary": "Path to go when the choice is selected by user;  See [`@goto`](https://naninovel.com/api/#goto) command for the path format."
        },
        {
          "id": "SetExpression",
          "alias": "set",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Set expression to execute when the choice is selected by user;  see [`@set`](https://naninovel.com/api/#set) command for syntax reference."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ClearBacklog",
      "localizable": false,
      "summary": "Removes all the messages from [printer backlog](https://naninovel.com/guide/printer-backlog.html).",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "DestroySpawned",
      "alias": "despawn",
      "localizable": false,
      "summary": "Destroys object spawned with [`@spawn`](https://naninovel.com/api/#spawn) command.",
      "remarks": "If prefab has a `UnityEngine.MonoBehaviour` component attached the root object, and the component implements  a `Naninovel.Commands.DestroySpawned.IParameterized` interface, will pass the specified `params` values before destroying the object;  if the component implements `Naninovel.Commands.DestroySpawned.IAwaitable` interface, command execution will wait for  the async completion task returned by the implementation before destroying the object.",
      "params": [
        {
          "id": "Path",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the prefab resource to destroy. Path is relative to a `./Resources` folder, eg  given a `Assets/Resources/FX/Explosion.prefab` asset, use the following path to spawn it: `FX/Explosion`.  A [`@spawn`](https://naninovel.com/api/#spawn) command with the same path is expected to be executed before."
        },
        {
          "id": "Params",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "string"
          },
          "summary": "Parameters to set before destoying the prefab.  Requires the prefab to have a `Naninovel.Commands.DestroySpawned.IParameterized` component attached the root object."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "Else",
      "localizable": false,
      "summary": "Marks a branch of a conditional execution block,  which is always executed in case conditions of the opening [`@if`](https://naninovel.com/api/#if) and all the preceding [`@elseif`](https://naninovel.com/api/#elseif) (if any) commands are not met.  For usage examples see [conditional execution](https://naninovel.com/guide/naninovel-scripts.html#conditional-execution) guide.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ElseIf",
      "localizable": false,
      "summary": "Marks a branch of a conditional execution block,  which is executed in case own condition is met (expression is evaluated to be true), while conditions of the opening [`@if`](https://naninovel.com/api/#if)  and all the preceding [`@elseif`](https://naninovel.com/api/#elseif) (if any) commands are not met.  For usage examples see [conditional execution](https://naninovel.com/guide/naninovel-scripts.html#conditional-execution) guide.",
      "params": [
        {
          "id": "Expression",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A [script expression](https://naninovel.com/guide/script-expressions.html), which should return a boolean value."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "EndIf",
      "localizable": false,
      "summary": "Closes an [`@if`](https://naninovel.com/api/#if) conditional execution block.  For usage examples see [conditional execution](https://naninovel.com/guide/naninovel-scripts.html#conditional-execution) guide.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "SpawnFx",
      "alias": "fx",
      "localizable": false,
      "summary": "Spawns a [special effect](https://naninovel.com/guide/special-effects.html) prefab stored in `./Resources/Naninovel/FX` resources folder.",
      "params": [
        {
          "id": "Path",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the prefab resource to spawn. Path is relative to a `./Resources` folder, eg  given a `Assets/Resources/FX/Explosion.prefab` asset, use the following path to spawn it: `FX/Explosion`."
        },
        {
          "id": "Params",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "string"
          },
          "summary": "Parameters to set when spawning the prefab.  Requires the prefab to have a `Naninovel.Commands.Spawn.IParameterized` component attached the root object."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "Gosub",
      "localizable": false,
      "summary": "Jumps the naninovel script playback to the provided path and saves the path to the global state;  [`@return`](https://naninovel.com/api/#return) commands use this info to redirect to command after the last invoked gosub command.  Resembles a function (subroutine) in a programming language, allowing to reuse a piece of naninovel script.  Useful for invoking a repeating set of commands multiple times.",
      "params": [
        {
          "id": "Path",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "namedLiteral",
            "contentType": "string"
          },
          "summary": "Path to jump into in the following format: `ScriptName.LabelName`.  When label name is ommited, will play provided script from the start.  When script name is ommited, will attempt to find a label in the currently played script."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "Goto",
      "localizable": false,
      "summary": "Jumps the naninovel script playback to the provided path.  When the path leads to another (not the currently played) naninovel script, will also [reset state](https://naninovel.com/api/#resetstate)  before loading the target script, unless [ResetStateOnLoad](https://naninovel.com/guide/configuration.html#state) is disabled in the configuration.",
      "params": [
        {
          "id": "Path",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "namedLiteral",
            "contentType": "string"
          },
          "summary": "Path to jump into in the following format: `ScriptName.LabelName`.  When label name is ommited, will play provided script from the start.  When script name is ommited, will attempt to find a label in the currently played script."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "HideActor",
      "alias": "hide",
      "localizable": false,
      "summary": "Hides (makes invisible) an actor (character, background, text printer, choice handler, etc) with the provided ID.  In case mutliple actors with the same ID found (eg, a character and a printer), will affect all of them.",
      "params": [
        {
          "id": "ActorId",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the actor to hide."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "HideAllActors",
      "alias": "hideAll",
      "localizable": false,
      "summary": "Hides (removes) all the actors (eg characters, backgrounds, text printers, choice handlers, etc) on scene.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "HideAllCharacters",
      "alias": "hideChars",
      "localizable": false,
      "summary": "Hides (removes) all the visible characters on scene.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "HidePrinter",
      "localizable": false,
      "summary": "Hides a text printer.",
      "params": [
        {
          "id": "PrinterId",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the printer actor to use. Will use a default one when not provided."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "HideUI",
      "localizable": false,
      "summary": "Makes a [managed UI](https://naninovel.com/guide/ui-customization.html) with the provided prefab name invisible.",
      "params": [
        {
          "id": "UIPrefabName",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Name of the managed UI prefab to hide."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "WaitForInput",
      "alias": "i",
      "localizable": false,
      "summary": "Holds script execution until user activates a `continue` input.  Shortcut for `@wait input`.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "BeginIf",
      "alias": "if",
      "localizable": false,
      "summary": "Marks the beginning of a conditional execution block.  Should always be closed with an [`@endif`](https://naninovel.com/api/#endif) command.  For usage examples see [conditional execution](https://naninovel.com/guide/naninovel-scripts.html#conditional-execution) guide.",
      "params": [
        {
          "id": "Expression",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A [script expression](https://naninovel.com/guide/script-expressions.html), which should return a boolean value."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "InputCustomVariable",
      "alias": "input",
      "localizable": true,
      "summary": "Shows an input field UI where user can enter an arbitrary text.  Upon submit the entered text will be assigned to the specified custom variable.",
      "remarks": "Check out this [video guide](https://youtu.be/F9meuMzvGJw) on usage example.  <br /><br />  To assign a display name for a character using this command consider [binding the name to a custom variable](https://naninovel.com/guide/characters.html#display-names).",
      "params": [
        {
          "id": "VariableName",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Name of a custom variable to which the entered text will be assigned."
        },
        {
          "id": "Summary",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "An optional summary text to show along with input field.  When the text contain spaces, wrap it in double quotes (`\"`).  In case you wish to include the double quotes in the text itself, escape them."
        },
        {
          "id": "PredefinedValue",
          "alias": "value",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A predefined value to set for the input field."
        },
        {
          "id": "PlayOnSubmit",
          "alias": "play",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to automatically resume script playback when user submits the input form."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "LoadScene",
      "localizable": false,
      "summary": "Loads a [Unity scene](https://docs.unity3d.com/Manual/CreatingScenes.html) with the provided name.  Don't forget to add the required scenes to the [build settings](https://docs.unity3d.com/Manual/BuildSettings.html) to make them available for loading.",
      "params": [
        {
          "id": "SceneName",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Name of the scene to load."
        },
        {
          "id": "Additive",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to load the scene additively, or unload any currently loaded scenes before loading the new one (default).  See the [load scene documentation](https://docs.unity3d.com/ScriptReference/SceneManagement.SceneManager.LoadScene.html) for more information."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "Lock",
      "localizable": false,
      "summary": "Sets an [unlockable item](https://naninovel.com/guide/unlockable-items.html) with the provided ID to `locked` state.",
      "remarks": "The unlocked state of the items is stored in [global scope](https://naninovel.com/guide/state-management.html#global-state).<br />  In case item with the provided ID is not registered in the global state map,  the corresponding record will automatically be added.",
      "params": [
        {
          "id": "Id",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the unlockable item. Use `all` to lock all the registered unlockable items."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "CameraLook",
      "alias": "look",
      "localizable": false,
      "summary": "Activates/disables camera look mode, when player can offset the main camera with input devices  (eg, by moving a mouse or using gamepad analog stick).  Check [this video](https://youtu.be/rC6C9mA7Szw) for a quick demonstration of the command.",
      "params": [
        {
          "id": "Enable",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to enable or disable the camera look mode. Default: true."
        },
        {
          "id": "LookZone",
          "alias": "zone",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "A bound box with X,Y sizes in units from the initial camera position,  describing how far the camera can be moved. Default: 5,3."
        },
        {
          "id": "LookSpeed",
          "alias": "speed",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Camera movement speed (sensitivity) by X,Y axes. Default: 1.5,1."
        },
        {
          "id": "Gravity",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to automatically move camera to the initial position when the look input is not active  (eg, mouse is not moving or analog stick is in default position). Default: false."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "PlayMovie",
      "alias": "movie",
      "localizable": false,
      "summary": "Playes a movie with the provided name (path).",
      "remarks": "Will fade-out the screen before playing the movie and fade back in after the play.  Playback can be canceled by activating a `cancel` input (`Esc` key by default).",
      "params": [
        {
          "id": "MovieName",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Name of the movie resource to play."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "PrintText",
      "alias": "print",
      "localizable": true,
      "summary": "Prints (reveals over time) specified text message using a text printer actor.",
      "remarks": "This command is used under the hood when processing generic text lines, eg generic line `Kohaku: Hello World!` will be  automatically tranformed into `@print \"Hello World!\" author:Kohaku` when parsing the naninovel scripts.<br />  Will reset (clear) the printer before printing the new message by default; set `reset` parameter to *false* to prevent that and append the text instead.<br />  Will wait for user input before finishing the task by default; set `waitInput` parameter to *false* to return as soon as the text is fully revealed.<br />  Will cancel the printing (reveal the text at once) on `Continue` and `Skip` inputs.<br />",
      "params": [
        {
          "id": "Text",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Text of the message to print.  When the text contain spaces, wrap it in double quotes (`\"`).  In case you wish to include the double quotes in the text itself, escape them."
        },
        {
          "id": "PrinterId",
          "alias": "printer",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the printer actor to use. Will use a default one when not provided."
        },
        {
          "id": "AuthorId",
          "alias": "author",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the actor, which should be associated with the printed message."
        },
        {
          "id": "RevealSpeed",
          "alias": "speed",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Text reveal speed multiplier; should be positive or zero. Setting to one will yield the default speed."
        },
        {
          "id": "ResetPrinter",
          "alias": "reset",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to reset text of the printer before executing the printing task."
        },
        {
          "id": "WaitForInput",
          "alias": "waitInput",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to wait for user input after finishing the printing task."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ModifyPrinter",
      "alias": "printer",
      "localizable": false,
      "summary": "Modifies a [printer actor](https://naninovel.com/guide/text-printers.html).",
      "params": [
        {
          "id": "IdAndAppearance",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "namedLiteral",
            "contentType": "string"
          },
          "summary": "ID of the printer to modify and the appearance to set.  When ID or appearance are not provided, will use default ones."
        },
        {
          "id": "MakeDefault",
          "alias": "default",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to make the printer the default one.  Default printer will be subject of all the printer-related commands when `printer` parameter is not specified."
        },
        {
          "id": "HideOther",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to hide all the other printers."
        },
        {
          "id": "ScenePosition",
          "alias": "pos",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "float"
          },
          "summary": "Position (relative to the screen borders, in percents) to set for the modified printer.  Position is described as follows: `0,0` is the bottom left, `50,50` is the center and `100,100` is the top right corner of the screen."
        },
        {
          "id": "Visible",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to show or hide the printer."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ProcessInput",
      "localizable": false,
      "summary": "Allows halting and resuming user input processing (eg, reacting to pressing keyboard keys).  The effect of the action is persistent and saved with the game.",
      "params": [
        {
          "id": "InputEnabled",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to enable input processing."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ResetState",
      "localizable": false,
      "summary": "Resets state of all the [engine services](https://naninovel.com/guide/engine-services.html) and unloads (disposes)  all the resources loaded by Naninovel (textures, audio, video, etc); will basically revert to an empty initial engine state.",
      "remarks": "The process is asynchronous and is masked with a loading screen ([ILoadingUI](https://naninovel.com/guide/ui-customization.html)).  <br /><br />  When [ResetStateOnLoad](https://naninovel.com/guide/configuration.html#state) is disabled in the configuration, you can use this command  to manually dispose unused resources to prevent memory leak issues.  <br /><br />  Be aware, that this command can not be undone (rewinded back).",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ResetText",
      "localizable": false,
      "summary": "Resets (clears) the contents of a text printer.",
      "params": [
        {
          "id": "PrinterId",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the printer actor to use. Will use a default one when not provided."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "Return",
      "localizable": false,
      "summary": "Attempts to jump the naninovel script playback to the command after the last used @gosub.  When the target command is not in the currently played script, will also [reset state](https://naninovel.com/api/#resetstate)  before loading the target script, unless [ResetStateOnLoad](https://naninovel.com/guide/configuration.html#state) is disabled in the configuration.  See [`@gosub`](https://naninovel.com/api/#gosub) command summary for more info and usage examples.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "AutoSave",
      "alias": "save",
      "localizable": false,
      "summary": "Automatically save the game to a quick save slot.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "SetCustomVariable",
      "alias": "set",
      "localizable": false,
      "summary": "Assigns result of a [script expression](https://naninovel.com/guide/script-expressions.html) to a [custom variable](https://naninovel.com/guide/custom-variables.html).",
      "remarks": "Variable name should be alphanumeric (latin characters only) and can contain underscores, eg: `name`, `Char1Score`, `my_score`;  the names are case-insensitive, eg: `myscore` is equal to `MyScore`. If a variable with the provided name doesn't exist, it will be automatically created.  <br /><br />  It's possible to define multiple set expressions in one line by separating them with `;`. The expressions will be executed in sequence by the order of declaratation.  <br /><br />  Custom variables are stored in **local scope** by default. This means, that if you assign some variable in the course of gameplay  and player starts a new game or loads another saved game slot, where that variable wasn't assigned — the value will be lost.  If you wish to store the variable in **global scope** instead, prepend `G_` or `g_` to its name, eg: `G_FinishedMainRoute` or `g_total_score`.  <br /><br />  In case variable name starts with `T_` or `t_` it's considered a reference to a value stored in 'Script' [managed text](https://naninovel.com/guide/managed-text.html) document.  Such variables can't be assiged and mostly used for referencing localizable text values.  <br /><br />  You can get and set custom variables in C# scripts via `CustomVariableManager` [engine service](https://naninovel.com/guide/engine-services.html).",
      "params": [
        {
          "id": "Expression",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Set expression.  <br /><br />  The expression should be in the following format: `VariableName=ExpressionBody`, where `VariableName` is the name of the custom  variable to assign and `ExpressionBody` is a [script expression](https://naninovel.com/guide/script-expressions.html), the result of which should be assigned to the variable.  <br /><br />  It's also possible to use increment and decrement unary operators, eg: `@set foo++`, `@set foo--`."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "PlaySfx",
      "alias": "sfx",
      "localizable": false,
      "summary": "Plays or modifies currently played SFX (sound effect) track with the provided name.",
      "remarks": "Sound effect tracks are not looped by default.  When sfx track name (SfxPath) is not specified, will affect all the currently played tracks.  When invoked for a track that is already playing, the playback won't be affected (track won't start playing from the start),  but the specified parameters (volume and whether the track is looped) will be applied.",
      "params": [
        {
          "id": "SfxPath",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the sound effect asset to play."
        },
        {
          "id": "Volume",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Volume of the sound effect."
        },
        {
          "id": "Loop",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether to play the sound effect in a loop."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ShowActor",
      "alias": "show",
      "localizable": false,
      "summary": "Shows (makes visible) an actor (character, background, text printer, choice handler, etc) with the provided ID.  In case mutliple actors with the same ID found (eg, a character and a printer), will affect all of them.",
      "params": [
        {
          "id": "ActorId",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the actor to show."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ShowPrinter",
      "localizable": false,
      "summary": "Shows a text printer.",
      "params": [
        {
          "id": "PrinterId",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the printer actor to use. Will use a default one when not provided."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ShowUI",
      "localizable": false,
      "summary": "Makes a [managed UI](https://naninovel.com/guide/ui-customization.html) with the provided prefab name visible.",
      "params": [
        {
          "id": "UIPrefabName",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Name of the managed UI prefab to make visible."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "SkipInput",
      "localizable": false,
      "summary": "Can be used in generic text lines to prevent activating `wait for input` mode when the text is printed.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "Spawn",
      "localizable": false,
      "summary": "Spawns a prefab stored in project resources.",
      "remarks": "If prefab has a `UnityEngine.MonoBehaviour` component attached the root object, and the component implements  a `Naninovel.Commands.Spawn.IParameterized` interface, will pass the specified `params` values after the spawn;  if the component implements `Naninovel.Commands.Spawn.IAwaitable` interface, command execution will wait for  the async completion task returned by the implementation.",
      "params": [
        {
          "id": "Path",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the prefab resource to spawn. Path is relative to a `./Resources` folder, eg  given a `Assets/Resources/FX/Explosion.prefab` asset, use the following path to spawn it: `FX/Explosion`."
        },
        {
          "id": "Params",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "string"
          },
          "summary": "Parameters to set when spawning the prefab.  Requires the prefab to have a `Naninovel.Commands.Spawn.IParameterized` component attached the root object."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "Stop",
      "localizable": false,
      "summary": "Stops the naninovel script execution.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "StopBgm",
      "localizable": false,
      "summary": "Stops playing a BGM (background music) track with the provided name.",
      "remarks": "When music track name (BgmPath) is not specified, will stop all the currently played tracks.",
      "params": [
        {
          "id": "BgmPath",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the music track to stop."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "DestroySpawnedFx",
      "alias": "stopFx",
      "localizable": false,
      "summary": "Stops [special effect](https://naninovel.com/guide/special-effects.html) started with [`@fx`](https://naninovel.com/api/#fx) command by destroying spawned object of the corresponding FX prefab.",
      "params": [
        {
          "id": "Path",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the prefab resource to destroy. Path is relative to a `./Resources` folder, eg  given a `Assets/Resources/FX/Explosion.prefab` asset, use the following path to spawn it: `FX/Explosion`.  A [`@spawn`](https://naninovel.com/api/#spawn) command with the same path is expected to be executed before."
        },
        {
          "id": "Params",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "array",
            "contentType": "string"
          },
          "summary": "Parameters to set before destoying the prefab.  Requires the prefab to have a `Naninovel.Commands.DestroySpawned.IParameterized` component attached the root object."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "StopSfx",
      "localizable": false,
      "summary": "Stops playing an SFX (sound effect) track with the provided name.",
      "remarks": "When sound effect track name (SfxPath) is not specified, will stop all the currently played tracks.",
      "params": [
        {
          "id": "SfxPath",
          "nameless": true,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the sound effect to stop."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "StopVoice",
      "localizable": false,
      "summary": "Stops playback of the currently played voice clip.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "SetTextStyle",
      "alias": "style",
      "localizable": false,
      "summary": "Permamently applies [text styles](https://naninovel.com/guide/text-printers.html#text-styles) to the contents of a text printer.",
      "remarks": "You can also use rich text tags inside text messages to apply the styles selectively.",
      "params": [
        {
          "id": "TextStyles",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "array",
            "contentType": "string"
          },
          "summary": "Text formatting tags to apply. Angle brackets should be ommited, eg use `b` for &lt;b&gt; and `size=100` for &lt;size=100&gt;. Use `default` keyword to reset the style."
        },
        {
          "id": "PrinterId",
          "alias": "printer",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the printer actor to use. Will use a default one when not provided."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "ExitToTitle",
      "alias": "title",
      "localizable": false,
      "summary": "Loads default engine state and shows `Naninovel.UI.ITitleUI`.",
      "params": [
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "Unlock",
      "localizable": false,
      "summary": "Sets an [unlockable item](https://naninovel.com/guide/unlockable-items.html) with the provided ID to `unlocked` state.",
      "remarks": "The unlocked state of the items is stored in [global scope](https://naninovel.com/guide/state-management.html#global-state).<br />  In case item with the provided ID is not registered in the global state map,  the corresponding record will automatically be added.",
      "params": [
        {
          "id": "Id",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "ID of the unlockable item. Use `all` to unlock all the registered unlockable items."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "PlayVoice",
      "alias": "voice",
      "localizable": false,
      "summary": "Plays a voice clip at the provided path.",
      "params": [
        {
          "id": "VoicePath",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Path to the voice clip to play."
        },
        {
          "id": "Volume",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Volume of the playback."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Whether the script player should wait for the async command execution before playing next command."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    },
    {
      "id": "Wait",
      "localizable": false,
      "summary": "Holds script execution until the specified wait condition.",
      "params": [
        {
          "id": "WaitMode",
          "nameless": true,
          "required": true,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "Wait conditions:<br />  - `i` user press continue or skip input key;<br />  - `0.0` timer (seconds);<br />  - `i0.0` timer, that is skippable by continue or skip input keys."
        },
        {
          "id": "Wait",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "bool"
          },
          "summary": "Holds script execution until the specified wait condition."
        },
        {
          "id": "Duration",
          "alias": "time",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "float"
          },
          "summary": "Determines for how long (in seconds) command should execute. Derived commands could (or could not) use this parameter."
        },
        {
          "id": "ConditionalExpression",
          "alias": "if",
          "nameless": false,
          "required": false,
          "dataType": {
            "kind": "literal",
            "contentType": "string"
          },
          "summary": "A boolean [script expression](https://naninovel.com/guide/script-expressions.html), controlling whether this command should execute."
        }
      ]
    }
  ]
}